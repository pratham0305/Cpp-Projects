                                           <----------------CSE MY CODES------------------->
1. ARMSTRONG NUMBERS:-
#include <stdio.h>

int main()
{  int n,a,r,sum=0;

printf("Enter any three digit no.:-\n");
scanf("%d",&n);

n=a;
   while(a!=0){
       r= a%10;
       sum+= r*r*r;
       a /=10;
}
if(sum==n){
        printf("%d is an armstrong number",n);
   }else{
   printf("%d is not an armstrong",n);
   }
   return 0;
}

------------------------------------------------------------------------------x
2.FINDING MAXIMUM AND MINIMUM VALUES OF AN ARRAY:-


#include<stdio.h>

int main(){
int a[10],i,max,min;
printf("Enter the elements for A:-\n");
for(i=0;i<10;i++){
        scanf("%d",&a[i]);
}
printf("\n");

max=a[0];
min=a[0];

for(i=0;i<10;i++){

        if(a[i]>max){
                max = a[i];
        }


        if(a[i]<min){
                min = a[i];
        }
}

    printf("%d is the maximum value of array A\n",max);
    printf("%d is the minimum value of array A",min);

   return 0;
}
----------------------------------------------------------X
3.DISPALY NUMBER OF DAYS IN A YEAR:-
#include<stdio.h>
#include<process.h>
int main (){
int month[12]={1,3,5,7,8,10,12,4,6,9,11,2};
int i,nm;
printf("\n");
printf("Enter number of month:");
scanf("%d",&nm);
for(i=0;i<=11;i++){

        if(nm==month[i]){
                goto compare;}}

printf("\n Invalid month");

compare:;

if(i+1==12){
        printf("Month (%d) Contains 28 days.",month[i]);
}
if(i+1<8){
        printf("Month (%d) contains 31 days.",month[i]);
}if(i+1>7 && i+1!=12){
printf("Month (%d) contains 30 days.",month[i]);
getche();
}


return 0;
}
------------------------------------------X
4.CREATING A NUMERICAL STAIRCASE,        DISCLAMER= (THIS CODE MAY NOT BE CORRECT ,
                                                       PLEASE CHECK .)
LIKE THIS =               5
                         45
                        345
                       2345
                      12345

#include<stdio.h>
int main(){
int a=5,b=5;

for(a=5;a<=1;a--){


        if(a==5){

              printf("\t\t\t\t%d",b);

        }


        if(a==4){
               while(b=5){ b=a;
                        printf("\t\t\t%d",b);
                        b++;

                }
        }


        if(a==3){  b=a;
                while(b=5){
                        printf("\t\t%d",b);
                         b++;
                }

        }
          if(a==2){
                        b=a;
                while(b=5){
                        printf("\t%d",b);
                         b++;
                }

        }
          if(a==1){
                        b=a;
               while(b=5) {
                        printf("%d",b);
                         b++;
                }

        }
           printf("\n");
           }



return 0;
}
---------------------------------X
5. INSERTON OF ELEMENTS=
#include <stdio.h>
#include <stdlib.h>

int main()
{int a[10]={2,37,39,90,36,38,37,890,10};
  int b[5],i,n,m,loc;
  n=10;

  printf("Elements of array A:-\n");
  for(i=0;i<n;i++){
    printf("%d ",a[i]);
  }

  printf("\n");
  printf("Enter the size of array B:-\n");
  scanf("%d",&m);

  printf("Enter the elements of array B:-\n");
  for(i=0;i<m;i++){
    scanf("%d \n",&b[i]);
  }

  //Insertion of elements in an array.
  printf("Enter the location where you want the array B to be located:-\n");
  scanf("%d",&loc);

  //Shifting of elements

  for(i=n-1;i>=loc;i--){

    a[i+m]=a[i];
  }

  for(i=0;i<n;i++){

    a[loc+i]=b[i];
  }

  for(i=0;i<n;i++){
    printf("%d  ",a[i]);
  }
    return 0;
}
-------------------------------X----------------------X------
3. Fibonacci series:-
#include <stdio.h>
int main()
{
    int t1 = 0, t2 = 1;
    int next = 0, n;
    printf("Enter a  number: ");
    scanf("%d", &n);
    printf("Fibonacci Series: %d, %d, ", t1, t2);

    next = t1 + t2;

    while(next <= n)
    {
        printf("%d, ",next);
        t1 = t2;
        t2 = next;
        next = t1 + t2;
    }

    return 0;
}
----------------------------X----------------------
4. Class overiding using derived(inheritence) class:-
class stud {
disp(){
cout<<"name";
}};

class der: public stud{   
disp(){
cout<<no;
}
};
-----------------------X-----------------------
5. Constructor:
/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;

class A{
  private:
  int a;
  
    public:
    A(int x){
        a=x;
    }
    void show(){
        cout<<"X="<<a;
    }
};

class B : public A{
    
    
    public:
    int y;
    int a,b;
    B(int a,int b ):A(a){
        
        y=b;
        
    }
    void show1(){
        
      b=y;
        cout<<"Y="<<b;
    }
};

int main()
{
 B s(10,20);

s.show();
s.show1();

    return 0;
}

-------------------------X---------------------
6. Operator Overloading:
    Syntax-
data_type  operator  opt_symbol(argument){}

Operators that cannot be overloaded: :: , ?:



/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>

using namespace std;
class test{
    private:
    int vin;
    public:
    test()
    {
        vin=2;
    }
    void operator ++(){
        vin=vin+1;
    }
    void dis(){
        cout<<vin<<endl;
    }
};


int main()
{
 test t;
 ++t;
 t.dis();

    return 0;
}
-------------------------------------------------------------------------
               Abstarct Array:
 # Inserting an elemnt in the array:
 I/P:  for(i=length;i>index;i--){  //Here, 'A' is th e=name of the array and 'index' is the posotion where we want insert the value.
           A[i]=A[i-1];
           }
  A[index] = x;  //Adding the value.
  length++;
  
  # Deleting an element in the array:
  I/P:  for(i=index;i<length-1;i++){
              A[i]=A[i+1];
              }
   length--;   //We are decreasing the size of the array because an element is deleted.
